BEGIN;

-- 1) Core lookups and parents first
CREATE TABLE IF NOT EXISTS campuses (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    code VARCHAR(10) NOT NULL,
    address TEXT,
    description TEXT,
    campus_logo_path VARCHAR(255),
    campus_landing_bg_path VARCHAR(255),
    campus_theme_key VARCHAR(50) DEFAULT 'blue',
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_campuses_code UNIQUE (code)
);
CREATE INDEX IF NOT EXISTS idx_campuses_name ON campuses (name);
CREATE INDEX IF NOT EXISTS idx_campuses_is_active ON campuses (is_active);
CREATE INDEX IF NOT EXISTS idx_campuses_created_at ON campuses (created_at);

-- 2) Users (self-referencing lock admin; optional campus)
CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    middle_name VARCHAR(50),
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(30) NOT NULL,
    profile_pic VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    campus_id INTEGER,
    video_call_notifications BOOLEAN DEFAULT TRUE,
    video_call_email_reminders BOOLEAN DEFAULT TRUE,
    preferred_video_quality VARCHAR(20) DEFAULT 'auto',
    account_locked BOOLEAN DEFAULT FALSE,
    lock_reason VARCHAR(255),
    locked_at TIMESTAMP WITHOUT TIME ZONE,
    locked_by_id INTEGER,
    is_online BOOLEAN DEFAULT FALSE,
    last_activity TIMESTAMP WITHOUT TIME ZONE,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_users_email UNIQUE (email),
    CONSTRAINT fk_users_campus_id
        FOREIGN KEY (campus_id) REFERENCES campuses (id) ON DELETE SET NULL,
    CONSTRAINT fk_users_locked_by_id
        FOREIGN KEY (locked_by_id) REFERENCES users (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_users_email ON users (email);
CREATE INDEX IF NOT EXISTS idx_users_role ON users (role);
CREATE INDEX IF NOT EXISTS idx_users_is_active ON users (is_active);
CREATE INDEX IF NOT EXISTS idx_users_campus_id ON users (campus_id);
CREATE INDEX IF NOT EXISTS idx_users_account_locked ON users (account_locked);
CREATE INDEX IF NOT EXISTS idx_users_created_at ON users (created_at);

-- 3) Offices (child of campuses)
CREATE TABLE IF NOT EXISTS offices (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    supports_video BOOLEAN DEFAULT FALSE,
    campus_id INTEGER NOT NULL,
    CONSTRAINT fk_offices_campus_id
        FOREIGN KEY (campus_id) REFERENCES campuses (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_offices_name ON offices (name);
CREATE INDEX IF NOT EXISTS idx_offices_campus_id ON offices (campus_id);

-- 4) Office admins (user<->office)
CREATE TABLE IF NOT EXISTS office_admins (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    office_id INTEGER NOT NULL,
    CONSTRAINT fk_office_admins_user_id
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_office_admins_office_id
        FOREIGN KEY (office_id) REFERENCES offices (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_office_admins_user_id ON office_admins (user_id);
CREATE INDEX IF NOT EXISTS idx_office_admins_office_id ON office_admins (office_id);

-- 5) Students (user + optional campus)
CREATE TABLE IF NOT EXISTS students (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    student_number VARCHAR(50),
    campus_id INTEGER,
    department VARCHAR(100),
    section VARCHAR(50),
    year_level VARCHAR(20),
    CONSTRAINT fk_students_user_id
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_students_campus_id
        FOREIGN KEY (campus_id) REFERENCES campuses (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_students_user_id ON students (user_id);
CREATE INDEX IF NOT EXISTS idx_students_student_number ON students (student_number);
CREATE INDEX IF NOT EXISTS idx_students_campus_id ON students (campus_id);
CREATE INDEX IF NOT EXISTS idx_students_department ON students (department);
CREATE INDEX IF NOT EXISTS idx_students_section ON students (section);
CREATE INDEX IF NOT EXISTS idx_students_year_level ON students (year_level);

-- 5b) Departments (used by students; child of campuses)
CREATE TABLE IF NOT EXISTS departments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    campus_id INTEGER NOT NULL,
    name VARCHAR(120) NOT NULL,
    code VARCHAR(20),
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_departments_campus_id
        FOREIGN KEY (campus_id) REFERENCES campuses (id) ON DELETE CASCADE,
    CONSTRAINT uq_department_campus_name UNIQUE (campus_id, name),
    CONSTRAINT uq_department_campus_code UNIQUE (campus_id, code)
);
CREATE INDEX IF NOT EXISTS idx_departments_campus_id ON departments (campus_id);
CREATE INDEX IF NOT EXISTS idx_departments_name ON departments (name);
CREATE INDEX IF NOT EXISTS idx_departments_is_active ON departments (is_active);

-- 5c) Add structured department reference to students
ALTER TABLE students ADD COLUMN IF NOT EXISTS department_id INTEGER;
ALTER TABLE students
    ADD CONSTRAINT fk_students_department_id
        FOREIGN KEY (department_id) REFERENCES departments (id) ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS idx_students_department_id ON students (department_id);

-- 6) Concern types
CREATE TABLE IF NOT EXISTS concern_types (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    allows_other BOOLEAN DEFAULT FALSE,
    auto_reply_enabled BOOLEAN DEFAULT FALSE,
    auto_reply_message TEXT,
    CONSTRAINT uq_concern_types_name UNIQUE (name)
);

-- 7) Account lock history (users->users)
CREATE TABLE IF NOT EXISTS account_lock_history (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    locked_by_id INTEGER,
    timestamp TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    reason VARCHAR(255),
    lock_type VARCHAR(50) NOT NULL,
    CONSTRAINT fk_account_lock_history_user_id
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_account_lock_history_locked_by_id
        FOREIGN KEY (locked_by_id) REFERENCES users (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_account_lock_history_user_id ON account_lock_history (user_id);
CREATE INDEX IF NOT EXISTS idx_account_lock_history_locked_by_id ON account_lock_history (locked_by_id);
CREATE INDEX IF NOT EXISTS idx_account_lock_history_timestamp ON account_lock_history (timestamp);

-- 8) Inquiries (student->office)
CREATE TABLE IF NOT EXISTS inquiries (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER NOT NULL,
    office_id INTEGER NOT NULL,
    subject VARCHAR(255) NOT NULL,
    status VARCHAR(50) DEFAULT 'pending',
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_inquiries_student_id
        FOREIGN KEY (student_id) REFERENCES students (id) ON DELETE CASCADE,
    CONSTRAINT fk_inquiries_office_id
        FOREIGN KEY (office_id) REFERENCES offices (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_inquiries_student_id ON inquiries (student_id);
CREATE INDEX IF NOT EXISTS idx_inquiries_office_id ON inquiries (office_id);
CREATE INDEX IF NOT EXISTS idx_inquiries_status ON inquiries (status);
CREATE INDEX IF NOT EXISTS idx_inquiries_created_at ON inquiries (created_at);

-- 9) Inquiry concerns (junction inquiries<->concern_types)
CREATE TABLE IF NOT EXISTS inquiry_concerns (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    inquiry_id INTEGER NOT NULL,
    concern_type_id INTEGER NOT NULL,
    other_specification VARCHAR(255),
    CONSTRAINT fk_inquiry_concerns_inquiry_id
        FOREIGN KEY (inquiry_id) REFERENCES inquiries (id) ON DELETE CASCADE,
    CONSTRAINT fk_inquiry_concerns_concern_type_id
        FOREIGN KEY (concern_type_id) REFERENCES concern_types (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_inquiry_concerns_inquiry_id ON inquiry_concerns (inquiry_id);
CREATE INDEX IF NOT EXISTS idx_inquiry_concerns_concern_type_id ON inquiry_concerns (concern_type_id);

-- 10) Office concern types (junction offices<->concern_types)
CREATE TABLE IF NOT EXISTS office_concern_types (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    office_id INTEGER NOT NULL,
    concern_type_id INTEGER NOT NULL,
    auto_reply_enabled BOOLEAN DEFAULT FALSE,
    auto_reply_message TEXT,
    for_inquiries BOOLEAN NOT NULL DEFAULT TRUE,
    for_counseling BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT fk_office_concern_types_office_id
        FOREIGN KEY (office_id) REFERENCES offices (id) ON DELETE CASCADE,
    CONSTRAINT fk_office_concern_types_concern_type_id
        FOREIGN KEY (concern_type_id) REFERENCES concern_types (id) ON DELETE CASCADE,
    CONSTRAINT uq_office_concern UNIQUE (office_id, concern_type_id)
);
CREATE INDEX IF NOT EXISTS idx_office_concern_types_office_id ON office_concern_types (office_id);
CREATE INDEX IF NOT EXISTS idx_office_concern_types_concern_type_id ON office_concern_types (concern_type_id);

-- 11) Inquiry messages (message thread)
CREATE TABLE IF NOT EXISTS inquiry_messages (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    inquiry_id INTEGER NOT NULL,
    sender_id INTEGER NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) NOT NULL DEFAULT 'sending',
    delivered_at TIMESTAMP WITHOUT TIME ZONE,
    read_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT fk_inquiry_messages_inquiry_id
        FOREIGN KEY (inquiry_id) REFERENCES inquiries (id) ON DELETE CASCADE,
    CONSTRAINT fk_inquiry_messages_sender_id
        FOREIGN KEY (sender_id) REFERENCES users (id)
);

-- 12) File attachments (polymorphic base)
CREATE TABLE IF NOT EXISTS file_attachments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    filename VARCHAR(255) NOT NULL,
    file_path VARCHAR(255) NOT NULL,
    file_size INTEGER,
    file_type VARCHAR(100),
    uploaded_by_id INTEGER,
    uploaded_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    attachment_type VARCHAR(50),
    CONSTRAINT fk_file_attachments_uploaded_by_id
        FOREIGN KEY (uploaded_by_id) REFERENCES users (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_file_attachments_uploaded_by_id ON file_attachments (uploaded_by_id);

-- 13) Inquiry attachments (inherits file_attachments)
CREATE TABLE IF NOT EXISTS inquiry_attachments (
    id INTEGER PRIMARY KEY,
    inquiry_id INTEGER NOT NULL,
    CONSTRAINT fk_inquiry_attachments_id
        FOREIGN KEY (id) REFERENCES file_attachments (id) ON DELETE CASCADE,
    CONSTRAINT fk_inquiry_attachments_inquiry_id
        FOREIGN KEY (inquiry_id) REFERENCES inquiries (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_inquiry_attachments_inquiry_id ON inquiry_attachments (inquiry_id);

-- 14) Message attachments (inherits file_attachments)
CREATE TABLE IF NOT EXISTS message_attachments (
    id INTEGER PRIMARY KEY,
    message_id INTEGER NOT NULL,
    CONSTRAINT fk_message_attachments_id
        FOREIGN KEY (id) REFERENCES file_attachments (id) ON DELETE CASCADE,
    CONSTRAINT fk_message_attachments_message_id
        FOREIGN KEY (message_id) REFERENCES inquiry_messages (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_message_attachments_message_id ON message_attachments (message_id);

-- 15) Counseling sessions
CREATE TABLE IF NOT EXISTS counseling_sessions (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER NOT NULL,
    office_id INTEGER NOT NULL,
    counselor_id INTEGER,
    scheduled_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    duration_minutes INTEGER DEFAULT 60,
    status VARCHAR(50) DEFAULT 'pending',
    notes TEXT,
    nature_of_concern_id INTEGER,
    nature_of_concern_description TEXT,
    is_video_session BOOLEAN DEFAULT FALSE,
    meeting_id VARCHAR(100),
    meeting_url VARCHAR(255),
    meeting_password VARCHAR(50),
    counselor_joined_at TIMESTAMP WITHOUT TIME ZONE,
    student_joined_at TIMESTAMP WITHOUT TIME ZONE,
    session_ended_at TIMESTAMP WITHOUT TIME ZONE,
    counselor_in_waiting_room BOOLEAN DEFAULT FALSE,
    student_in_waiting_room BOOLEAN DEFAULT FALSE,
    call_started_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT fk_counseling_sessions_student_id
        FOREIGN KEY (student_id) REFERENCES students (id) ON DELETE CASCADE,
    CONSTRAINT fk_counseling_sessions_office_id
        FOREIGN KEY (office_id) REFERENCES offices (id) ON DELETE CASCADE,
    CONSTRAINT fk_counseling_sessions_counselor_id
        FOREIGN KEY (counselor_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_counseling_sessions_nature_of_concern_id
        FOREIGN KEY (nature_of_concern_id) REFERENCES concern_types (id) ON DELETE SET NULL,
    CONSTRAINT uq_counseling_sessions_meeting_id UNIQUE (meeting_id)
);
CREATE INDEX IF NOT EXISTS idx_counseling_sessions_student_id ON counseling_sessions (student_id);
CREATE INDEX IF NOT EXISTS idx_counseling_sessions_office_id ON counseling_sessions (office_id);
CREATE INDEX IF NOT EXISTS idx_counseling_sessions_counselor_id ON counseling_sessions (counselor_id);
CREATE INDEX IF NOT EXISTS idx_counseling_sessions_scheduled_at ON counseling_sessions (scheduled_at);
CREATE INDEX IF NOT EXISTS idx_counseling_sessions_status ON counseling_sessions (status);
CREATE INDEX IF NOT EXISTS idx_counseling_sessions_nature_of_concern_id ON counseling_sessions (nature_of_concern_id);

-- 16) Session recording (1:1 with session)
CREATE TABLE IF NOT EXISTS session_recordings (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    session_id INTEGER NOT NULL UNIQUE,
    recording_path VARCHAR(255) NOT NULL,
    duration_seconds INTEGER,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    student_consent BOOLEAN DEFAULT FALSE,
    counselor_consent BOOLEAN DEFAULT FALSE,
    CONSTRAINT fk_session_recordings_session_id
        FOREIGN KEY (session_id) REFERENCES counseling_sessions (id) ON DELETE CASCADE
);

-- 17) Session participations
CREATE TABLE IF NOT EXISTS session_participations (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    session_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    joined_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    left_at TIMESTAMP WITHOUT TIME ZONE,
    connection_quality VARCHAR(20),
    device_info VARCHAR(255),
    ip_address VARCHAR(45),
    CONSTRAINT fk_session_participations_session_id
        FOREIGN KEY (session_id) REFERENCES counseling_sessions (id) ON DELETE CASCADE,
    CONSTRAINT fk_session_participations_user_id
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_session_participations_session_id ON session_participations (session_id);
CREATE INDEX IF NOT EXISTS idx_session_participations_user_id ON session_participations (user_id);

-- 18) Session reminders
CREATE TABLE IF NOT EXISTS session_reminders (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    session_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    reminder_type VARCHAR(20) NOT NULL,
    scheduled_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    sent_at TIMESTAMP WITHOUT TIME ZONE,
    status VARCHAR(20) DEFAULT 'pending',
    CONSTRAINT fk_session_reminders_session_id
        FOREIGN KEY (session_id) REFERENCES counseling_sessions (id) ON DELETE CASCADE,
    CONSTRAINT fk_session_reminders_user_id
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_session_reminders_session_id ON session_reminders (session_id);
CREATE INDEX IF NOT EXISTS idx_session_reminders_user_id ON session_reminders (user_id);

-- 19) Announcements
CREATE TABLE IF NOT EXISTS announcements (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author_id INTEGER NOT NULL,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    target_office_id INTEGER,
    is_public BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_announcements_author_id
        FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_announcements_target_office_id
        FOREIGN KEY (target_office_id) REFERENCES offices (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_announcements_author_id ON announcements (author_id);
CREATE INDEX IF NOT EXISTS idx_announcements_target_office_id ON announcements (target_office_id);
CREATE INDEX IF NOT EXISTS idx_announcements_is_public ON announcements (is_public);
CREATE INDEX IF NOT EXISTS idx_announcements_created_at ON announcements (created_at);

-- 20) Announcement images
CREATE TABLE IF NOT EXISTS announcement_images (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    announcement_id INTEGER NOT NULL,
    image_path VARCHAR(255) NOT NULL,
    caption VARCHAR(255),
    display_order INTEGER DEFAULT 0,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_announcement_images_announcement_id
        FOREIGN KEY (announcement_id) REFERENCES announcements (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_announcement_images_announcement_id ON announcement_images (announcement_id);

-- 21) Notifications
CREATE TABLE IF NOT EXISTS notifications (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    title VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    notification_type VARCHAR(50) DEFAULT 'general',
    source_office_id INTEGER,
    inquiry_id INTEGER,
    announcement_id INTEGER,
    link VARCHAR(255),
    CONSTRAINT fk_notifications_user_id
        FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_notifications_source_office_id
        FOREIGN KEY (source_office_id) REFERENCES offices (id) ON DELETE SET NULL,
    CONSTRAINT fk_notifications_inquiry_id
        FOREIGN KEY (inquiry_id) REFERENCES inquiries (id) ON DELETE SET NULL,
    CONSTRAINT fk_notifications_announcement_id
        FOREIGN KEY (announcement_id) REFERENCES announcements (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_notifications_user_id ON notifications (user_id);
CREATE INDEX IF NOT EXISTS idx_notifications_is_read ON notifications (is_read);
CREATE INDEX IF NOT EXISTS idx_notifications_created_at ON notifications (created_at);
CREATE INDEX IF NOT EXISTS idx_notifications_notification_type ON notifications (notification_type);
CREATE INDEX IF NOT EXISTS idx_notifications_source_office_id ON notifications (source_office_id);
CREATE INDEX IF NOT EXISTS idx_notifications_inquiry_id ON notifications (inquiry_id);
CREATE INDEX IF NOT EXISTS idx_notifications_announcement_id ON notifications (announcement_id);

-- 22) Audit logs
CREATE TABLE IF NOT EXISTS audit_logs (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    actor_id INTEGER,
    actor_role VARCHAR(20),
    action VARCHAR(100) NOT NULL,
    target_type VARCHAR(50),
    target_id INTEGER,
    inquiry_id INTEGER,
    office_id INTEGER,
    status_snapshot VARCHAR(50),
    is_success BOOLEAN DEFAULT TRUE,
    failure_reason VARCHAR(255),
    ip_address VARCHAR(45),
    user_agent VARCHAR(255),
    timestamp TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    retention_days INTEGER DEFAULT 365,
    CONSTRAINT fk_audit_logs_actor_id
        FOREIGN KEY (actor_id) REFERENCES users (id) ON DELETE SET NULL,
    CONSTRAINT fk_audit_logs_inquiry_id
        FOREIGN KEY (inquiry_id) REFERENCES inquiries (id) ON DELETE SET NULL,
    CONSTRAINT fk_audit_logs_office_id
        FOREIGN KEY (office_id) REFERENCES offices (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_audit_logs_actor_id ON audit_logs (actor_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_actor_role ON audit_logs (actor_role);
CREATE INDEX IF NOT EXISTS idx_audit_logs_action ON audit_logs (action);
CREATE INDEX IF NOT EXISTS idx_audit_logs_target_type ON audit_logs (target_type);
CREATE INDEX IF NOT EXISTS idx_audit_logs_target_id ON audit_logs (target_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_inquiry_id ON audit_logs (inquiry_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_office_id ON audit_logs (office_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_timestamp ON audit_logs (timestamp);

-- 23) Student activity logs
CREATE TABLE IF NOT EXISTS student_activity_logs (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER,
    action VARCHAR(100) NOT NULL,
    related_id INTEGER,
    related_type VARCHAR(50),
    is_success BOOLEAN DEFAULT TRUE,
    failure_reason VARCHAR(255),
    ip_address VARCHAR(45),
    user_agent VARCHAR(255),
    timestamp TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    retention_days INTEGER DEFAULT 365,
    CONSTRAINT fk_student_activity_logs_student_id
        FOREIGN KEY (student_id) REFERENCES students (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_student_activity_logs_student_id ON student_activity_logs (student_id);
CREATE INDEX IF NOT EXISTS idx_student_activity_logs_action ON student_activity_logs (action);
CREATE INDEX IF NOT EXISTS idx_student_activity_logs_related_id ON student_activity_logs (related_id);
CREATE INDEX IF NOT EXISTS idx_student_activity_logs_related_type ON student_activity_logs (related_type);
CREATE INDEX IF NOT EXISTS idx_student_activity_logs_timestamp ON student_activity_logs (timestamp);

-- 24) Office login logs
CREATE TABLE IF NOT EXISTS office_login_logs (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    office_admin_id INTEGER,
    login_time TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    logout_time TIMESTAMP WITHOUT TIME ZONE,
    ip_address VARCHAR(45),
    user_agent VARCHAR(255),
    session_duration INTEGER,
    is_success BOOLEAN DEFAULT TRUE,
    failure_reason VARCHAR(255),
    retention_days INTEGER DEFAULT 365,
    CONSTRAINT fk_office_login_logs_office_admin_id
        FOREIGN KEY (office_admin_id) REFERENCES office_admins (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_office_login_logs_office_admin_id ON office_login_logs (office_admin_id);
CREATE INDEX IF NOT EXISTS idx_office_login_logs_login_time ON office_login_logs (login_time);

-- 25) Super admin activity logs
CREATE TABLE IF NOT EXISTS super_admin_activity_logs (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    super_admin_id INTEGER,
    action VARCHAR(100) NOT NULL,
    target_type VARCHAR(50),
    target_user_id INTEGER,
    target_office_id INTEGER,
    details TEXT,
    is_success BOOLEAN DEFAULT TRUE,
    failure_reason VARCHAR(255),
    ip_address VARCHAR(45),
    user_agent VARCHAR(255),
    timestamp TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    retention_days INTEGER DEFAULT 730,
    CONSTRAINT fk_super_admin_activity_logs_super_admin_id
        FOREIGN KEY (super_admin_id) REFERENCES users (id) ON DELETE SET NULL,
    CONSTRAINT fk_super_admin_activity_logs_target_user_id
        FOREIGN KEY (target_user_id) REFERENCES users (id) ON DELETE SET NULL,
    CONSTRAINT fk_super_admin_activity_logs_target_office_id
        FOREIGN KEY (target_office_id) REFERENCES offices (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_super_admin_activity_logs_super_admin_id ON super_admin_activity_logs (super_admin_id);
CREATE INDEX IF NOT EXISTS idx_super_admin_activity_logs_action ON super_admin_activity_logs (action);
CREATE INDEX IF NOT EXISTS idx_super_admin_activity_logs_target_type ON super_admin_activity_logs (target_type);
CREATE INDEX IF NOT EXISTS idx_super_admin_activity_logs_target_user_id ON super_admin_activity_logs (target_user_id);
CREATE INDEX IF NOT EXISTS idx_super_admin_activity_logs_target_office_id ON super_admin_activity_logs (target_office_id);
CREATE INDEX IF NOT EXISTS idx_super_admin_activity_logs_timestamp ON super_admin_activity_logs (timestamp);

-- 26) System settings
CREATE TABLE IF NOT EXISTS system_settings (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    setting_key VARCHAR(100) NOT NULL,
    setting_value TEXT NOT NULL,
    setting_type VARCHAR(50) DEFAULT 'string',
    description TEXT,
    is_public BOOLEAN DEFAULT TRUE,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_by_id INTEGER,
    CONSTRAINT uq_system_settings_setting_key UNIQUE (setting_key),
    CONSTRAINT fk_system_settings_updated_by_id
        FOREIGN KEY (updated_by_id) REFERENCES users (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_system_settings_setting_key ON system_settings (setting_key);
CREATE INDEX IF NOT EXISTS idx_system_settings_updated_by_id ON system_settings (updated_by_id);

-- 27) Super super admin activity logs
CREATE TABLE IF NOT EXISTS super_super_admin_activity_logs (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    super_super_admin_id INTEGER,
    action VARCHAR(100) NOT NULL,
    target_type VARCHAR(50),
    target_user_id INTEGER,
    target_campus_id INTEGER,
    details TEXT,
    is_success BOOLEAN DEFAULT TRUE,
    failure_reason VARCHAR(255),
    ip_address VARCHAR(45),
    user_agent VARCHAR(255),
    timestamp TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    retention_days INTEGER DEFAULT 1095,
    CONSTRAINT fk_super_super_admin_activity_logs_super_super_admin_id
        FOREIGN KEY (super_super_admin_id) REFERENCES users (id) ON DELETE SET NULL,
    CONSTRAINT fk_super_super_admin_activity_logs_target_user_id
        FOREIGN KEY (target_user_id) REFERENCES users (id) ON DELETE SET NULL,
    CONSTRAINT fk_super_super_admin_activity_logs_target_campus_id
        FOREIGN KEY (target_campus_id) REFERENCES campuses (id) ON DELETE SET NULL
);
CREATE INDEX IF NOT EXISTS idx_super_super_admin_activity_logs_super_super_admin_id ON super_super_admin_activity_logs (super_super_admin_id);
CREATE INDEX IF NOT EXISTS idx_super_super_admin_activity_logs_action ON super_super_admin_activity_logs (action);
CREATE INDEX IF NOT EXISTS idx_super_super_admin_activity_logs_target_type ON super_super_admin_activity_logs (target_type);
CREATE INDEX IF NOT EXISTS idx_super_super_admin_activity_logs_target_user_id ON super_super_admin_activity_logs (target_user_id);
CREATE INDEX IF NOT EXISTS idx_super_super_admin_activity_logs_target_campus_id ON super_super_admin_activity_logs (target_campus_id);
CREATE INDEX IF NOT EXISTS idx_super_super_admin_activity_logs_timestamp ON super_super_admin_activity_logs (timestamp);

COMMIT;

-- Seed a highest admin (Super Admin) account
INSERT INTO users (
    first_name, middle_name, last_name,
    email, password_hash, role,
    is_active, video_call_notifications, video_call_email_reminders,
    preferred_video_quality, account_locked, is_online, created_at
) VALUES (
    'Super', NULL, 'Admin',
    'superadmin@admin.com',
    'scrypt:32768:8:1$wgXOIeqOn8n31CQ9$16b5af02319c3e39025297491ff5f362a4551bd34ad8e76e62f367857c5ec757dbd5a495a655179b42a2278d0697fe3986f79cb100ed8d72b323b9507debcc66',
    'super_super_admin',
    TRUE, TRUE, TRUE,
    'auto', FALSE, FALSE, CURRENT_TIMESTAMP
);