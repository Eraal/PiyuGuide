## Copy these to /etc/piyuguide.env on the server (do not commit real secrets)

# Core
SECRET_KEY=change-this-to-a-strong-random-string
APP_TIMEZONE=Asia/Manila

# Database (Single-droplet local PostgreSQL example)
# Using the psycopg2 driver; user/db must exist on the droplet
# Format: postgresql+psycopg2://<user>:<password>@<host>/<database>
DATABASE_URL=postgresql+psycopg2://rald:admin@localhost/piyuguide

# Cookies / Security (serve behind HTTPS)
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_SAMESITE=Lax
PREFERRED_URL_SCHEME=https

# Logging
LOG_LEVEL=INFO

# Flask-SocketIO
SOCKETIO_ASYNC_MODE=eventlet
SOCKETIO_PING_TIMEOUT=60
SOCKETIO_PING_INTERVAL=25
# Comma-separated list. Example: https://yourdomain.com,https://www.yourdomain.com
SOCKETIO_CORS_ALLOWED_ORIGINS=
SOCKETIO_LOGGER=false
SOCKETIO_ENGINEIO_LOGGER=false
# Optional: Redis message queue when scaling beyond one worker or one instance
SOCKETIO_MESSAGE_QUEUE=

# WebRTC ICE / TURN
# You MUST configure a TURN server for users on different ISPs / carrier NAT (black video otherwise).
# Option A: Full explicit JSON list (highest priority). Include STUN + TURN variants (udp,tcp,tls).
#   Example:
#   ICE_SERVERS_JSON=[{"urls":["stun:stun.l.google.com:19302"]},{"urls":["turn:turn.yourdomain.com:3478?transport=udp","turn:turn.yourdomain.com:3478?transport=tcp","turns:turn.yourdomain.com:5349?transport=tcp"],"username":"turnuser","credential":"turnpass"}]
# Option B: Provide TURN_HOST + TURN_USERNAME + TURN_PASSWORD; app auto-expands to STUN+TURN list.
# Option C (legacy): TURN_URL + TURN_USERNAME + TURN_PASSWORD single entry.
# If none provided, client falls back to public STUN ONLY (NOT production ready for cross-network calling).
ICE_SERVERS_JSON=
TURN_HOST=
TURN_USERNAME=
TURN_PASSWORD=
# Legacy single URL (e.g. turn:turn.yourdomain.com:3478) - only used if TURN_HOST not set.
TURN_URL=

# Development server only (run.py)
HOST=127.0.0.1
PORT=5000
DEBUG=0
